
name: selecting snap
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'The application deployment environment'
        default: 'devl'
        required: true
        type: choice
        options:
         - devl
         - prod
         
      SnapshotArns:
        description: 'select the snapshots ARN'
        default: 'Snapshot1'
        required: true
        type: choice
        options:
         - Snapshot1
         - Snapshot2
         - Snapshot3
         - Snapshot4

jobs:
  Deploy:
    runs-on: ubuntu-latest
    #this is for control the deployment via approval method 1
    # alrerady craeted env with name dev in github setings 
    #environment: Infra

    
    steps:
     
    - name: Checkout
      uses: actions/checkout@v2


    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
       aws-region: us-east-1

    - name: "Set environment variables for devl environment"
      if: ${{ github.event.inputs.environment == 'devl' }}
      run: |
        echo "ENVIRONMENT=devl" >> $GITHUB_ENV
        echo "AWS_ACCT=274452765669" >> $GITHUB_ENV

    - name: "Set environment variables for prod environment"
      if: ${{ github.event.inputs.environment == 'prod' }}
      run: |
        echo "ENVIRONMENT=prod" >> $GITHUB_ENV
        echo "AWS_ACCT=188549407646" >> $GITHUB_ENV 
    


    - name: "Deploying the snapshot1"
      if: ${{ github.event.inputs.SnapshotArns == 'Snapshot1' }}
      run: |
       snapshot1=`aws rds describe-db-snapshots --snapshot-type=manual --query "sort_by(DBSnapshots, &SnapshotCreateTime)[-1].DBSnapshotArn" --output text`
       echo $snapshot1
       aws cloudformation deploy --stack-name dq-stack-${{ env.ENVIRONMENT }} --template-file ${{ env.ENVIRONMENT }}-snap.yml --parameter-overrides DBSnapshotIdentifier=$snapshot1   
       
    - name: "Deploying the snapshot1"
      if: ${{ github.event.inputs.SnapshotArns == 'Snapshot2' }}
      run: |
       snapshot2=`aws rds describe-db-snapshots --snapshot-type=manual --query "sort_by(DBSnapshots, &SnapshotCreateTime)[-2].DBSnapshotArn" --output text`
       echo $snapshot2
       aws cloudformation deploy --stack-name dq-stack-${{ env.ENVIRONMENT }} --template-file ${{ env.ENVIRONMENT }}-snap.yml --parameter-overrides DBSnapshotIdentifier=$snapshot2

    - name: "deploying the snaphot3"
      if: ${{ github.event.inputs.SnapshotArns == 'Snapshot3' }}
      run: |
       snapshot3=`aws rds describe-db-snapshots --db-instance-identifier=database-1 --snapshot-type=manual --query="sort_by(DBSnapshots, &SnapshotCreateTime)[-3].DBSnapshotArn" --output text`  
       echo $snapshot3
       aws cloudformation deploy --stack-name dq-stack-${{ env.ENVIRONMENT }} --template-file ${{ env.ENVIRONMENT }}-snap.yml --parameter-overrides DBSnapshotIdentifier=$snapshot3
   
    - name: "Deploying the snapshot4"
      if: ${{ github.event.inputs.SnapshotArns == 'Snapshot4' }}
      run: |
       snapshot4=`aws rds describe-db-snapshots --snapshot-type=manual --query "sort_by(DBSnapshots, &SnapshotCreateTime)[-4].DBSnapshotArn" --output text`
       echo $snapshot4
       aws cloudformation deploy --stack-name dq-stack-${{ env.ENVIRONMENT }} --template-file ${{ env.ENVIRONMENT }}-snap.yml --parameter-overrides DBSnapshotIdentifier=$snapshot4
       
